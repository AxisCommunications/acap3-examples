name: Build vdo-larod-preprocessing applications
on:
  push:
    paths:
      - 'vdo-larod-preprocessing/**'
      - '!vdo-larod-preprocessing/README.md'
      - '.github/workflows/vdo-larod-preprocessing.yml'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build vdo-larod-preprocessing application to run on CPU
        run: |
          imagetag=vdo-larod-preprocessing-cpu:1.0
          docker image rm -f $imagetag
          cd vdo-larod-preprocessing
          cp app/manifest.json.cpu app/manifest.json
          docker build --no-cache --build-arg CHIP=cpu --tag $imagetag .
          docker cp $(docker create $imagetag):/opt/app ./build
          cd ..
          mkdir -p vdo-larod-preprocessing/build_cpu_preprocessing/
          cp vdo-larod-preprocessing/build/vdo_larod_preprocessing_cpu_1_0_0_armv7hf.eap vdo-larod-preprocessing/build_cpu_preprocessing/vdo_larod_preprocessing_cpu_1_0_0_armv7hf.eap

      - name: Build vdo-larod-preprocessing application to run on TPU
        run: |
          imagetag=vdo-larod-preprocessing-tpu:1.0
          docker image rm -f $imagetag
          cd vdo-larod-preprocessing
          rm -rf build/
          cp app/manifest.json.edgetpu app/manifest.json
          docker build --no-cache --build-arg CHIP=edgetpu --tag $imagetag .
          docker cp $(docker create $imagetag):/opt/app ./build
          cd ..
          mkdir -p vdo-larod-preprocessing/build_tpu_preprocessing/
          cp vdo-larod-preprocessing/build/vdo_larod_preprocessing_edgetpu_1_0_0_armv7hf.eap vdo-larod-preprocessing/build_tpu_preprocessing/vdo_larod_preprocessing_edgetpu_1_0_0_armv7hf.eap
