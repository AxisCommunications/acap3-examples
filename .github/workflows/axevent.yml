name: Build axevent applications
on:
  workflow_dispatch:
  push:
    paths:
      - 'axevent/**'
      - '!axevent/**/README.md'
      - '.github/workflows/axevent.yml'
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        axis-os: ["10.12.153"]
        arch: ["armv7hf", "aarch64"]
    env:
      EXREPO: acap3-examples
      EXNAME: axevent
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Build ${{ env.example }} application
        env:
          example: send_event
          imagetag: ${{ env.EXREPO }}_send-event:${{ matrix.arch }}
        run: |
          docker image rm -f $imagetag
          cd $EXNAME/$example
          docker build --no-cache --tag $imagetag --build-arg ARCH=${{ matrix.arch }} .
          docker cp $(docker create $imagetag):/opt/app ./build
          cd ../..
          docker image rm -f $imagetag

      - name: Build ${{ env.example }} application
        env:
          example: subscribe_to_event
          imagetag: ${{ env.EXREPO }}_subscribe-to-event:${{ matrix.arch }}
        run: |
          docker image rm -f $imagetag
          cd $EXNAME/$example
          docker build --no-cache --tag $imagetag --build-arg ARCH=${{ matrix.arch }} .
          docker cp $(docker create $imagetag):/opt/app ./build
          cd ../..
          docker image rm -f $imagetag

      - name: Build ${{ env.example }} application
        env:
          example: subscribe_to_events
          imagetag: ${{ env.EXREPO }}_subscribe-to-events:${{ matrix.arch }}
        run: |
          docker image rm -f $imagetag
          cd $EXNAME/$example
          docker build --no-cache --tag $imagetag --build-arg ARCH=${{ matrix.arch }} .
          docker cp $(docker create $imagetag):/opt/app ./build
          cd ../..
          docker image rm -f $imagetag
